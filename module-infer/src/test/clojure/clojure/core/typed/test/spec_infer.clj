(ns clojure.core.typed.test.spec-infer
  {:lang :core.typed
   :core.typed {:features #{:runtime-infer}}
   }
  (:refer-clojure :exclude [alias])
  (:require [clojure.core.typed :as t]))

;; Start: Generated by clojure.core.typed - DO NOT EDIT
(declare alias alias__347185)
(t/defalias alias (t/U t/Sym Long))
(t/defalias alias__347185 (t/U t/Str Long))
(t/ann
  mapfn
  [[alias :-> alias__347185]
   (t/U (t/Seqable (t/U t/Sym Long)) (t/Seqable t/Sym) (t/Vec Long))
   :->
   (t/Seqable (t/U t/Str Long))])
;; End: Generated by clojure.core.typed - DO NOT EDIT

(do
(defn mapfn [f c]
  (map f c))

(mapfn inc [1 2 3])
(mapfn inc '(1 2 3))
(mapfn str '(a b c))
)

#_
(do
(defn sym 
  ([name] (symbol name))
  ([ns name] (symbol ns name)))

(sym "a")
(sym 'a)
(sym "abc" "bcd")
(sym nil "bcd")
)
