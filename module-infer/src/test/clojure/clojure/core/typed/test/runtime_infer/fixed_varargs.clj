(ns clojure.core.typed.test.runtime-infer.fixed-varargs
  {:lang :core.typed
   :core.typed {:features #{:runtime-infer}}
   }
  (:require [clojure.core.typed :as t]
            [clojure.spec.alpha :as s]
            [clojure.pprint :refer [pprint]]))

;; Start: Generated by clojure.core.typed - DO NOT EDIT
(s/fdef collapse-me :args (s/cat :args (s/* int?)) :ret nil?)
(s/fdef function :args (s/cat :i int? :f int? :j (s/* int?)) :ret int?)
;; End: Generated by clojure.core.typed - DO NOT EDIT

(defn function 
  ([i f] (function i f 0))
  ([i j & [k]]
   i))


(function 1 2)
(function 1 2 3)

(defn collapse-me
  ([& args]))


(collapse-me 1 2)
(collapse-me 1 2 3)